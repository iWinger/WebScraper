import smtplib, ssl
from bs4 import BeautifulSoup
import requests
import base64
from scraper.bestPrice import comparePrice

port = 587  # For starttls
smtp_server = "smtp.gmail.com" # DO NOT CHANGE THIS
sender_email = "testlin43@gmail.com" # DO NOT CHANGE THIS
password = "Testing12345" # DO NOT CHANGE THIS

context = ssl.create_default_context()

def sendQuotesEmail(receiver_email): # receiver_email = email address you're sending to
    htmlDoc = open('./templates/quotesout.html',"r+",encoding="utf8")
    soup = BeautifulSoup(htmlDoc)
    a = soup.find_all('p')
    email_message="Subject: Web Scraper Alert: You have requested quotes of wisdom.\n\nYou have requested for the following quotes:\n\n"
    for i in range(len(a)):
        email_message=email_message+str(i+1)+") "+str(a[i])[11:len(str(a[i]))-11]+"\n"
    email_message=email_message+"\nThis message was auto-generated using Python.\n\nVisit our GitHub:\nhttps://github.com/iWinger/WebScraper\n\nCS 314 Final Project\n\n"
    print(email_message)
    with smtplib.SMTP(smtp_server, port) as server:
        server.ehlo()  # Can be omitted
        server.starttls(context=context)
        server.ehlo()  # Can be omitted
        server.login(sender_email, password)
        server.sendmail(sender_email, receiver_email, email_message.encode('ascii',errors='replace'))

def sendPricesEmail(receiver_email): # receiver_email = email address you're sending to
    htmlDoc = open('./templates/priceout.html',"r+",encoding="utf-8")
    soup = BeautifulSoup(htmlDoc)
    a = soup.find_all('p')
    b = soup.find_all('span')
    email_message="Subject: Web Scraper Alert: You have requested for prices.\n\nYou have requested for the following prices of select items:\n\n"
    for i in range(len(a)):
        email_message=email_message+str(i+1)+") "+(str(a[i])[10:len(str(a[i]))-10]+" ("+str(b[i])[27:len(str(b[i]))-13]).strip('"')+")\n\n"
    email_message=email_message+"\nThis message was auto-generated using Python.\n\nVisit our GitHub:\nhttps://github.com/iWinger/WebScraper\n\nCS 314 Final Project\n\n"
    print(email_message)
    with smtplib.SMTP(smtp_server, port) as server:
        server.ehlo()  # Can be omitted
        server.starttls(context=context)
        server.ehlo()  # Can be omitted
        server.login(sender_email, password)
        server.sendmail(sender_email, receiver_email, email_message.encode('ascii',errors='replace'))

def sendRecommendationsEmail(URL,companyName,receiver_email):
    # Example: sendRecommendationsEmail('https://www.amazon.com/s?k=computer/1/','Lenovo','jonlinsanity@gmail.com')
    tupleRec = comparePrice(URL,companyName)
    email_message = "Subject: Web Scraper Alert: You have requested a recommended item for the company name "+str(companyName)+"\n\nYou have requested the best price for the keyword "+str(companyName)+".\n\n"
    check=0
    for i in range(len(tupleRec)):
        if tupleRec[i] == None:
            email_message = email_message+"No item can be found with this keyword.\n\n"
            check=1
    if check==0:
        email_message = email_message+"Name: "+str(tupleRec[0])+"\nLink: "+str(tupleRec[1])+"\nPrice: "+str(tupleRec[2])+"\n\nThis message was auto-generated using Python.\n\nVisit our GitHub:\nhttps://github.com/iWinger/WebScraper\n\nCS 314 Final Project\n\n"
    print(email_message)
    with smtplib.SMTP(smtp_server, port) as server:
        server.ehlo()  # Can be omitted
        server.starttls(context=context)
        server.ehlo()  # Can be omitted
        server.login(sender_email, password)
        server.sendmail(sender_email, receiver_email, email_message.encode('ascii',errors='replace'))
